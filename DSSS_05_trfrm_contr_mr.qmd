---
title: "Transformations and Constrasts in Multiple Regression"
author: "Reinhold Kliegl"
date-format: iso
format: 
  html:
    embed-resources: true
    toc: true
    toc-depth: 3
    code-fold: true
    number-sections: true
    fig-width: 10
    fig-height: 7
    fig-format: svg
editor_options: 
  chunk_output_type: console
---

# Setup

```{r}
library(tidyverse)
library(car)
library(performance)
library(emmeans)
library(hypr)
```

# Transformation after checking model residuals 

## Analyses of six-minute run: No need for transformation

### Graph

Why 42? [The Answer to the Ultimate Question of Life, the Universe, and Everything is 42](https://en.wikipedia.org/wiki/Phrases_from_The_Hitchhiker%27s_Guide_to_the_Galaxy#The_Answer_to_the_Ultimate_Question_of_Life,_the_Universe,_and_Everything_is_42)

```{r}
set.seed(42)
dat_run <- 
  readRDS("data/EmotikonSubset.rds") |>
  mutate(Sex = fct_recode(Sex, Girls="female", Boys="male"),
         AgeBin = cut(age, breaks = c(7.8, seq(8.2, 9.0, 0.25), 9.3)), 
         cohort = as.numeric(as.character(Cohort))) |> 
  group_by(Test) |> 
  filter(Test=="Run") |>
  group_by(Cohort, Sex) |> 
  sample_n(50) |> 
  ungroup() |> 
  select(Cohort, School, Child, Sex, AgeBin, cohort, age, score)

dat_run |>
  group_by(Cohort, Sex) |> 
  summarise(N=n(), Run_M=mean(score), Run_SD=sd(score))

dat_run |> 
  ggplot(aes(x=age, y=score, group=Sex, color=Sex)) +
  geom_jitter() +
  geom_smooth(method="lm") +
#  geom_smooth(linetype="dashed") +
  scale_colour_manual("", values=c("red", "blue")) +
  scale_x_continuous("Age [year]", breaks=seq(7.75,9.25,.25)) +
  scale_y_continuous("Six-minute run [m]", breaks=seq(500,1500,100)) +
  geom_hline(yintercept=1008.11) +
  coord_cartesian(xlim=c(8, 9.1), ylim=c(500,1500)) +
  theme_bw() + theme(legend.position = "top") 

dat_run |> 
  ggplot(aes(x=cohort, y=score, group=Sex, color=Sex)) +
  geom_jitter() +
  geom_smooth(method="lm") +
#  geom_smooth(linetype="dashed") +
  scale_colour_manual("", values=c("red", "blue")) +
  scale_x_continuous("Cohort", breaks=seq(2011,2019)) +
  scale_y_continuous("Six-minute run [m]", breaks=seq(500,1500,100)) +
  geom_hline(yintercept=1008.11) +
  coord_cartesian(xlim=c(2011, 2019), ylim=c(500,1500)) +
  theme_bw() + theme(legend.position = "top") 
```

### Multiple regression

```{r}
m1_run <-  lm(score ~ 1 + Sex + age + cohort, data=dat_run)
summary(m1_run)

check_model(m1_run)
boxCox(m1_run)
```

## Analysis of _Star_ run: Need for reciprocal transformation

```{r}
set.seed(42)
dat_star <- 
  readRDS("data/EmotikonSubset.rds") |>
  mutate(Sex = fct_recode(Sex, Girls="female", Boys="male"),
         AgeBin = cut( age, breaks = c(7.8, seq(8.2, 9.0, 0.25), 9.3)), 
         cohort = as.numeric(as.character(Cohort))) |> 
  group_by(Test) |> 
  filter(Test=="Star_r") |>
  mutate(score = 51/score) |>  
  group_by(Cohort, Sex) |> 
  sample_n(50) |> 
  ungroup() |> 
  select(Cohort, School, Child, Sex, AgeBin, cohort, age, score)

m1_star <-  lm(score ~ 1 + age + Sex + cohort, data=dat_star)
summary(m1_star)

check_model(m1_star)
boxCox(m1_star)
```

Tukey's ladder of power transformations for lambdas:
+ lambda = -1, then 1/score  
+ lambda = -1/2, then 1/sqrt(score)
+ [lambda = 0, then log(score)]  -- special case because   sccore^0 = 1 
+ lambda = +1/2, then sqrt(score)
+ lambda = 1, then no transformation

```{r}
dat_star$score_r = 51/dat_star$score

m1_star_r <-  lm(score_r ~ 1 + age + Sex + cohort, data=dat_star)
summary(m1_star_r)

check_model(m1_star_r)
boxCox(m1_star_r)
```

# Factors and covariates

The following analysis assume a balanced design, that is equal number of children in each of the Sex x Cohort cells of the design.

Contrasts are needed for factors; some form of centering is often needed for covariates.

## Factor _Sex_ 

### Treatment coding

If you don't specify a contrast, R will specify a treatment contrast for you. This is the default setting.

```
contrasts(dat_run$Sex) <- contr.treatment(2)
```

```{r}
contrasts(dat_run$Sex)

m2_run_trt <-  lm(score ~ 1 +  Sex, data=dat_run)
summary(m2_run_trt)

(tbl_sex <- dat_run |> group_by(Sex) |> summarise(N=n(), M=mean(score), SD=sd(score)))
(Boys_Girls <- tbl_sex$M[2] - tbl_sex$M[1])   # Boys - girls
(GrandMean <- mean(dat_run$score))
```

+ `(Intercept)` is mean of group with level 0:  Girls.
+ `Sex2` is difference of Boys' and Girls' means.

*Note*: When the data are balanced, you don't need multiple regression (MR) to estimate effects; you need MR to estimate SEs of effects, that is to test the significance of the difference.

### Effect coding 

```{r}
contrasts(dat_run$Sex) <- contr.sum(2)

m2_run_sum <-  lm(score ~ 1 +  Sex, data=dat_run)
summary(m2_run_sum)

tbl_sex 
GrandMean
(DistFromGM <- (tbl_sex$M[2] - tbl_sex$M[1])/2)   # Boys
```

+ `(Intercept)` is Grand Mean
+ `Sex1` is distance of Boys from Grand Mean (same absolute difference for Girls).

### Sequential difference coding ("sliding contrast")

```{r}
contrasts(dat_run$Sex) <- MASS::contr.sdif(2)  # contr.sdif() "lives" in package MASS

m2_run_sqd <-  lm(score ~ 1 + Sex, data=dat_run)
summary(m2_run_sqd)

tbl_sex 
GrandMean
(Boys_Girls <- tbl_sex$M[2] - tbl_sex$M[1])   # Boys - girls
```

+ `(Intercept)` is Grand Mean
+ `Sex2-1` is difference of Boys' and Girls' means.

## Covariate _cohort_

Now we model the effect of the covariate _cohort_. 

```{r}
contrasts(dat_run$Sex) <- MASS::contr.sdif(2)
m3_run <-  lm(score ~ 1 + cohort, data=dat_run)
summary(m3_run)
```

The `(Intercept)` estimate looks very different. It is the Grand Mean when cohort has the value 0, that is around the first Christmas in history. This is not very plausible, or course. 

```{r}
dat_run |> 
  ggplot(aes(x=cohort, y=score)) + 
  geom_smooth(method=lm, fullrange=TRUE) + 
  scale_x_continuous("Cohort [year]", limits=c(0,2020), breaks=seq(0,2000, 250)) +
  scale_y_continuous("Six-minute run [m]", breaks=seq(0,20000,1000)) +
  theme_bw()
```

That's why it is a good idea to center covariates at a meaningful value.

```{r}
contrasts(dat_run$Sex) <- MASS::contr.sdif(2)
dat_run$cohort_c <- dat_run$cohort - 2015

m3b_run <-  lm(score ~ 1 + cohort_c, data=dat_run)
summary(m3b_run)

# rescaling does not change the goodness of fit
anova(m3_run, m3b_run)
```

+ `(Intercept)`:  GM in year 2015 is equal to the GM of all the data because I have balanced set of data and because 2015 is in the middle of cohort.
+ `cohort_c`:  change in dependent variable when covariate is increase by 1 unit (year in this example)

## Factor _Cohort_

### Treatment coding

```{r}
contrasts(dat_run$Cohort) <- contr.treatment(9, base=1)

m4_run_trt <-  lm(score ~ 1 + Cohort, data=dat_run)
summary(m4_run_trt)

(tbl_chrt <- dat_run |> group_by(Cohort) |> summarise(N=n(), M=mean(score), SD=sd(score)))
```

+ `(Intercept)` is mean at first level (i.e., 2011 in the example)
+ `Cohort2` is  2012 - 2011
+ `Cohort3` is  2013 - 2011
+ ... 

With the _base_ argument you can set a different level as the reference level.

### Sequential difference coding

```{r}
contrasts(dat_run$Cohort) <- MASS::contr.sdif(9)

m4_run_sqd <-  lm(score ~ 1 + Cohort, data=dat_run)
summary(m4_run_sqd)

GrandMean
tbl_chrt
```

+ `(Intercept)` is Grand Mean
+ `Cohort2` is 2012 - 2011
+ `Cohort3` is 2013 - 2012
+ `Cohort4` is 2014 - 2013
+ ...

It is interesting to compare `m3_run` and `m4_run_sqd`.

```{r}
anova(m3_run, m4_run_sqd)
```

Thus, it was a bit of waste to spend eight degrees of freedom for _Cohort_. We can get the same goodness of fit with 1 df for cohort.

### Hypothesis coding

The most common contrasts [`contr.sum()`, `MASS::contr.sdif()`, `contr.treatment()`] are available as R functions. If you want to set up your own contrast, not covered by the pre-programmed ones, see:

+ [Schad et al. (2020)]()
+ [Rabe et al. (2020)]()

Both papers are also in the _DSSS/literature_ folder.

# Appendix

```{r}
sessionInfo()
```

